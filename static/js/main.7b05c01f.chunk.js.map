{"version":3,"sources":["components/addListForm.jsx","components/addList.jsx","components/addCardForm.jsx","components/addCard.jsx","components/card.jsx","components/listSetting.jsx","components/updateListForm.jsx","components/board.jsx","components/navbar.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["AddListForm","formRef","React","createRef","inputRef","onSubmit","event","preventDefault","name","current","value","props","onAddList","reset","onCancel","handleCancel","ref","this","className","type","placeholder","onClick","Component","AddList","handleChangeCheckAddList","onChangeCheckAddList","handleAddList","checkAddList","AddCardForm","text","onAddCard","boardId","AddCard","handleAdd","onAdd","handleAddCard","checkAddCard","Card","handleDragStart","onDragStart","card","handleDragOver","id","draggable","onDragOver","ListSetting","blockTransmission","stopPropagation","handleDeleteList","onDeleteList","handleOnListDraggable","onListDraggable","handleChangeListName","onChangeListName","handleDeleteAllCardInList","onDeleteAllCardInList","onCloseSetting","cards","length","UpdateListForm","state","listName","handleValueChange","setState","target","onListNameUpdate","onChange","Board","openSetting","handleDragEnter","onDragEnter","handleListDragStart","list","handleSetting","closeListDraggable","handleListNameUpdate","handleCloseSetting","onUpdateListName","onMouseLeave","onMouseOver","map","beforeBoard","Navbar","src","alt","App","boards","item","clickFrame","updateListName","componentDidMount","window","addEventListener","handleScroll","componentWillUnmount","removeEventListener","console","log","find","i","board","toString","filter","lists","push","index","Date","now","before","slice","checkClickFrame","handleUpdateListName","flexbox","document","getElementsByClassName","view","innerWidth","scrollWidth","scrollLeft","deltaY","onWheel","onClickFrame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b05c01f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class AddListForm extends Component {\r\n  formRef = React.createRef();\r\n  inputRef = React.createRef();\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const name = this.inputRef.current.value;\r\n    name && this.props.onAddList(name);\r\n    this.formRef.current.reset();\r\n    this.props.onCancel();\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.formRef.current.reset();\r\n    this.props.onCancel();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form ref={this.formRef} className=\"add-list-form\" onSubmit={this.onSubmit}>\r\n      <input ref={this.inputRef} type=\"text\" className=\"add-list-input\" placeholder=\"Enter a title for this list...\"/>\r\n      <div>\r\n        <button className=\"add-card-button\">Add List</button>\r\n        <button \r\n          className=\"add-card-cancel-button\"\r\n          type=\"button\"\r\n          onClick={this.handleCancel}\r\n        >\r\n          <i className=\"cancel-icon fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport AddListForm from './addListForm';\r\n\r\nexport default class AddList extends Component {\r\n  handleChangeCheckAddList = () => {\r\n    this.props.onChangeCheckAddList();\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.onChangeCheckAddList();\r\n  }\r\n\r\n  handleAddList = name => {\r\n    this.props.onAddList(name);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      {this.props.checkAddList ?\r\n        <AddListForm onAddList={this.handleAddList} onCancel={this.handleCancel}/>\r\n        : \r\n        <div className=\"add-list\" onClick={this.handleChangeCheckAddList}>\r\n          <i className=\"add-icon fas fa-plus\"></i>\r\n          Add another list\r\n        </div>\r\n      }\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass AddCardForm extends Component {\r\n  formRef = React.createRef();\r\n  inputRef = React.createRef();\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const text = this.inputRef.current.value;\r\n    text && this.props.onAddCard(this.props.boardId, text);\r\n    this.formRef.current.reset();\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.formRef.current.reset();\r\n    this.props.onCancel();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form ref={this.formRef} className=\"add-card-form\" onSubmit={this.onSubmit}>\r\n        <textarea ref={this.inputRef} type=\"text\" className=\"add-card-input\" placeholder=\"Enter a title for this card...\"/>\r\n        <div>\r\n          <button className=\"add-card-button\">Add Card</button>\r\n          <button \r\n            className=\"add-card-cancel-button\"\r\n            type=\"button\"\r\n            onClick={this.handleCancel}\r\n          >\r\n            <i className=\"cancel-icon fas fa-times\"></i>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddCardForm;","import React, { Component } from 'react'\r\nimport AddCardForm from './addCardForm';\r\n\r\nexport default class AddCard extends Component {\r\n  handleAdd = () => {\r\n    this.props.onAdd();\r\n  }\r\n  handleAddCard = (boardId, text) => {\r\n    this.props.onAddCard(boardId, text);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"add-another-card\">\r\n        {this.props.checkAddCard ? \r\n        <AddCardForm \r\n          onAddCard={this.handleAddCard} \r\n          boardId={this.props.boardId}\r\n          onCancel={this.props.onAdd}\r\n        />\r\n        : \r\n        <section className=\"add-another-card-button\" onClick={this.handleAdd}>\r\n          <i className=\"add-icon fas fa-plus\"></i>\r\n          Add another card\r\n        </section>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Card extends Component {\r\n  handleDragStart = () => {\r\n    this.props.onDragStart(this.props.card);\r\n  }\r\n\r\n  handleDragOver = event => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={this.props.id}\r\n        className=\"card\"\r\n        draggable={this.props.draggable}\r\n        onDragStart={this.handleDragStart}\r\n        onDragOver={this.handleDragOver}\r\n      >\r\n        {this.props.card.text}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass ListSetting extends Component {\r\n  blockTransmission = event => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n\r\n  handleDeleteList = () => {\r\n    this.props.onDeleteList(this.props.boardId);\r\n  }\r\n\r\n  handleOnListDraggable = () => {\r\n    this.props.onListDraggable();\r\n  }\r\n\r\n  handleChangeListName = () => {\r\n    this.props.onChangeListName();\r\n  }\r\n\r\n  handleDeleteAllCardInList = () => {\r\n    this.props.onDeleteAllCardInList(this.props.boardId);\r\n    this.props.onCloseSetting();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={this.handleOnListDraggable}>\r\n        <ul className=\"list-setting-items\" onClick={this.blockTransmission}>\r\n          <li className=\"list-setting-title\">List Actions</li>\r\n          <hr/>\r\n          <li className=\"list-setting-item\" onClick={this.handleChangeListName}>Change List Name...</li>\r\n          <li className=\"list-setting-item\" onClick={this.handleDeleteList}>Delete List</li>\r\n          {this.props.cards.length > 0 &&\r\n            <hr/>\r\n          }\r\n          {this.props.cards.length > 0 &&\r\n            <li className=\"list-setting-item\" onClick={this.handleDeleteAllCardInList}>Delete All Card in This List...</li>\r\n          }\r\n        </ul>\r\n        <div className=\"list-setting-background\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListSetting;","import React, { Component } from 'react'\r\n\r\nexport default class UpdateListForm extends Component {\r\n  state = {\r\n    value: this.props.listName\r\n  }\r\n\r\n  handleValueChange = event => {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  formRef = React.createRef();\r\n  inputRef = React.createRef();\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const name = this.inputRef.current.value;\r\n    name && this.props.onListNameUpdate(this.props.boardId, name);\r\n    this.props.onCloseSetting();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"update-list-form\" ref={this.formRef} onSubmit={this.onSubmit}>\r\n        <input \r\n          className=\"add-list-input\"\r\n          ref={this.inputRef} \r\n          type=\"text\" \r\n          value={this.state.value} \r\n          onChange={this.handleValueChange}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport AddList from './addList';\r\nimport AddCard from './addCard';\r\nimport Card from './card';\r\nimport ListSetting from './listSetting';\r\nimport UpdateListForm from './updateListForm';\r\n\r\nexport default class Board extends Component {\r\n  state = {\r\n    checkAddCard: false,\r\n    checkAddList: false,\r\n    openSetting: false,\r\n    onListDraggable: true\r\n  }\r\n\r\n  handleDragOver = event => {\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleDragEnter = event => {\r\n    this.props.onDragEnter(event);\r\n  }\r\n\r\n  handleDragStart = card => {\r\n    this.props.onDragStart(card);\r\n  }\r\n\r\n  handleListDragStart = () => {\r\n    this.props.onDragStart(this.props.list);\r\n  }\r\n\r\n  handleAdd = () => {\r\n    const checkAddCard = !this.state.checkAddCard;\r\n    this.setState({ checkAddCard });\r\n  }\r\n\r\n  handleAddCard = (boardId, text) => {\r\n    this.props.onAddCard(boardId, text);\r\n  }\r\n\r\n  handleChangeCheckAddList = () => {\r\n    const checkAddList = !this.state.checkAddList;\r\n    this.setState({ checkAddList });\r\n  }\r\n\r\n  handleAddList = (name) => {\r\n    this.props.onAddList(name);\r\n  }\r\n\r\n  handleSetting = () => {\r\n    const openSetting = !this.state.openSetting;\r\n    this.setState({ openSetting })\r\n  }\r\n\r\n  handleDeleteList = boardId => {\r\n    this.props.onDeleteList(boardId);\r\n  }\r\n\r\n  closeListDraggable = () => {\r\n    const onListDraggable = \"false\";\r\n    this.setState({ onListDraggable });\r\n  }\r\n\r\n  handleOnListDraggable = () => {\r\n    const onListDraggable = \"true\";\r\n    this.setState({ onListDraggable });\r\n  }\r\n\r\n  handleChangeListName = () => {\r\n    this.props.onChangeListName(this.props.list.name);\r\n  }\r\n\r\n  handleListNameUpdate = (boardId, name) => {\r\n    this.props.onListNameUpdate(boardId, name);\r\n  }\r\n\r\n  handleCloseSetting = () => {\r\n    const openSetting = false\r\n    this.setState({ openSetting })\r\n  }\r\n\r\n  handleDeleteAllCardInList = boardId => {\r\n    this.props.onDeleteAllCardInList(boardId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={this.props.id}\r\n        className={this.props.className}\r\n        onDragOver={this.handleDragOver}\r\n        onDragEnter={this.handleDragEnter}\r\n      >\r\n        {this.props.list ?\r\n          <div className=\"list\">\r\n            { this.props.onUpdateListName === this.props.list.name ? \r\n            <UpdateListForm \r\n              listName={this.props.list.name}\r\n              boardId={this.props.id}\r\n              onListNameUpdate={this.handleListNameUpdate}\r\n              onCloseSetting={this.handleCloseSetting}\r\n            />\r\n            :\r\n            <section \r\n              className=\"list-name-space\"\r\n            >\r\n              <section \r\n                className=\"list-name\"\r\n                onDragStart={this.handleListDragStart}\r\n                draggable={this.state.onListDraggable}\r\n                onClick={this.handleChangeListName}\r\n              >\r\n                {this.props.list.name}\r\n              </section>\r\n              <div \r\n                onMouseLeave={this.handleOnListDraggable} \r\n                onMouseOver={this.closeListDraggable} \r\n                className=\"list-setting\" \r\n                onClick={this.handleSetting}\r\n              >\r\n                <i className=\"fas fa-ellipsis-h\"></i>\r\n                { this.state.openSetting && \r\n                  <ListSetting \r\n                    boardId={this.props.id}\r\n                    cards={this.props.list.cards}\r\n                    onDeleteList={this.handleDeleteList} \r\n                    onListDraggable={this.handleOnListDraggable} \r\n                    onChangeListName={this.handleChangeListName}\r\n                    onDeleteAllCardInList={this.handleDeleteAllCardInList}\r\n                    onCloseSetting={this.handleCloseSetting}\r\n                  /> \r\n                }\r\n              </div>\r\n            </section>\r\n            }\r\n            {this.props.list.cards.map(card => \r\n              <Card \r\n                key={card.id}\r\n                card={card}\r\n                beforeBoard={this.props.id}\r\n                onDragStart={this.handleDragStart}\r\n                draggable=\"true\"\r\n              />\r\n            )}\r\n            <AddCard \r\n              checkAddCard={this.state.checkAddCard} \r\n              onAdd={this.handleAdd}\r\n              onAddCard={this.handleAddCard}\r\n              boardId={this.props.id}\r\n            />\r\n          </div> :\r\n          <AddList \r\n            onAddList={this.handleAddList}\r\n            onChangeCheckAddList={this.handleChangeCheckAddList} \r\n            checkAddList={this.state.checkAddList}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <img src=\"https://github.com/mooyeon-choi/trello_clone_coding/blob/master/public/images/navbar_logo.png?raw=true\" alt=\"logo\" className=\"navbar-logo\"/>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\nimport './app.css';\nimport Board from './components/board';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  state = {\n    boards: [\n      {id:\"0\", list: {name:\"To Do\", type: \"list\", cards: [{id: 'card_1', type: \"card\", text: 'React 공부'}]}},\n      {id:\"1\", list: {name:\"Doing\", type: \"list\", cards: [{id: 'card_2', type: \"card\", text: 'JavaScript 공부'}]}},\n      {id:\"2\", list: {name:\"Done\", type: \"list\", cards: [{id: 'card_3', type: \"card\", text: '아침 운동'}]}},\n      {id:\"3\", list: null}\n    ],\n    item: null,\n    clickFrame: null,\n    updateListName: null,\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleDragEnter = event => {\n    event.preventDefault();\n    const target = event.target;\n    console.log(target.id.length)\n    if (target.id.length > 0) if (this.state.boards.find(item => item.id === target.id).list) {\n      const boards = this.state.boards;\n      if (this.state.item.type === \"card\") {\n        for (let i = 0; i < boards.length - 1; i++) {\n          const board = boards[i]\n          const card = this.state.item\n          if (board.id.toString() === target.id) {\n            board.list.cards = [...board.list.cards.filter(item => item.id !== card.id), card]\n          } else {\n            board.list.cards = [...board.list.cards.filter(item => item.id !== card.id)]\n          }\n        }\n        this.setState({ boards })\n      } else if (this.state.item.type === \"list\") {\n        const lists = [];\n        const list = this.state.item;\n        for (let i = 0; i < boards.length - 1; i ++) {\n          boards[i].list !== list && lists.push(boards[i].list);\n        }\n        let index = 0;\n        for (let i = 0; i < boards.length - 1; i ++) {\n          if (boards[i].id !== target.id) {\n            boards[i].list = lists[index];\n            index++;\n          } else {\n            boards[i].list = list;\n          }\n        }\n      }\n      this.setState({ boards })\n    }\n  }\n\n  handleDragStart = item => {\n    console.log(item)\n    this.setState({ item });\n  }\n\n  handleAddCard = (boardId, text) => {\n    const boards = this.state.boards;\n    boards.find(item => item.id === boardId).list.cards = [...boards.find(item => item.id === boardId).list.cards, { id: Date.now().toString(), type: \"card\", text }]\n    this.setState({ boards })\n  }\n\n  handleAddList = name => {\n    const before = this.state.boards;\n    const boards = [...before.slice(0, before.length - 1), {id: Date.now().toString(), list: { name, type: \"list\", cards: []}}, before[before.length - 1]]\n    console.log(boards)\n    this.setState({ boards })\n  }\n\n  handleDeleteList = boardId => {\n    const boards = this.state.boards.filter(item => item.id !== boardId);\n    this.setState({ boards })\n  }\n\n  checkClickFrame = event => {\n    if (event.target.className !== \"add-list-input\" && event.target.className !== \"list-name\") {\n      this.setState({ onUpdateListName: null })\n    } \n  }\n\n  handleChangeListName = listName => {\n    const onUpdateListName = listName;\n    this.setState({ onUpdateListName })\n  }\n\n  handleUpdateListName = (boardId, name) => {\n    const boards = this.state.boards;\n    for (let i = 0; i < boards.length - 1; i++) {\n      if (boards[i].id === boardId) boards[i].list.name = name;\n    }\n    this.setState({ boards })\n  }\n\n  handleDeleteAllCardInList = boardId => {\n    const boards = this.state.boards;\n    for (let i = 0; i < boards.length - 1; i++) {\n      if (boards[i].id === boardId) boards[i].list.cards = [];\n    }\n    this.setState({ boards })\n  }\n\n  handleScroll = event => {\n    const flexbox = document.getElementsByClassName(\"flexbox\")[0]\n    if (event.view.innerWidth < flexbox.scrollWidth) {\n      flexbox.scrollLeft += event.deltaY\n    } else {\n      flexbox.scrollLeft = 0\n    }\n  }\n\n  render() {\n    return (\n      <div onClick={this.checkClickFrame} onWheel={this.handleScroll}>\n        <Navbar />\n        <div className=\"flexbox\">\n          {this.state.boards.map(board =>\n            <Board\n              key={board.id}\n              id={board.id}\n              list={board.list}\n              board={board}\n              className=\"board\"\n              onDragEnter={this.handleDragEnter}\n              onDragStart={this.handleDragStart}\n              onAddCard={this.handleAddCard}\n              onAddList={this.handleAddList}\n              onDeleteList={this.handleDeleteList}\n              onClickFrame={this.checkClickFrame}\n              onUpdateListName={this.state.onUpdateListName}\n              onChangeListName={this.handleChangeListName}\n              onListNameUpdate={this.handleUpdateListName}\n              onDeleteAllCardInList={this.handleDeleteAllCardInList}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}